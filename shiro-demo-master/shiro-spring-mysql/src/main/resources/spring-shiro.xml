<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="roleOr" class="com.jelly.shiroMySQLDemo.shiro.RoleOrAuthorizationFilter"/>
    <bean id="permOr" class="com.jelly.shiroMySQLDemo.shiro.PermOrAuthorizationFilter"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" depends-on="roleOr">
    	<!-- 必配 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 登录界面设置 -->
        <property name="loginUrl" value="/toLogin"/>
        <property name="unauthorizedUrl" value="/401.jsp"/>
        <property name="filters">
            <util:map>
                <entry key="roleOr" value-ref="roleOr"/>
                <entry key="permOr" value-ref="permOr"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /static/**=anon
                /test/**=anon
                /login=anon

                /admin=authc
                /adminList=authc, roleOr[roleList, roleSuper]
                /adminAdd=authc, roleOr[roleAdd, roleSuper]
                /adminDelete=authc, roleOr[roleDelete, roleSuper]
                /adminSuper=authc, roleOr[roleSuper]

                /tom*=authc, permOr[tom:list,tom:add,tom:delete,tom:update]

                /*=authc
            </value>
        </property>
    </bean>
	
	<!-- 配置密码加密器 -->
    <bean id="hashedCredentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5"/>
    </bean>
	<!-- 自定义认证或者授权权限器 -->
    <bean id="myAuthorizingRealm" class="com.jelly.shiroMySQLDemo.shiro.MyAuthorizingRealm">
        <property name="credentialsMatcher" ref="hashedCredentialsMatcher"/>
    </bean>
	
	<!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myAuthorizingRealm" />
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>